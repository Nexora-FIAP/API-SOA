name: CI/CD Security Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # ================================
  # 1. SAST - An√°lise Est√°tica
  # ================================
  sast:
    name: SAST - Semgrep
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/ci"
      - name: Upload SAST Report
        uses: actions/upload-artifact@v4
        with:
          name: sast-report
          path: semgrep.sarif
      - name: Upload to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif

  # ================================
  # 2. SCA - Depend√™ncias
  # ================================
  sca:
    name: SCA - Snyk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Run Snyk
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: test --json > snyk-report.json
      - name: Upload SCA Report
        uses: actions/upload-artifact@v4
        with:
          name: sca-report
          path: snyk-report.json

  # ================================
  # 3. DAST - Teste Din√¢mico
  # ================================
  dast:
    name: DAST - OWASP ZAP
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Build aplica√ß√£o
        run: mvn clean package -DskipTests

      - name: Start aplica√ß√£o em background
        run: |
          java -jar target/*.jar &
          sleep 25  # espera a aplica√ß√£o subir

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.8.0
        with:
          target: "http://localhost:8080"
          cmd_options: "-a"

      - name: Upload DAST Report
        uses: actions/upload-artifact@v4
        with:
          name: dast-report
          path: zap-report.html

  # ================================
  # 4. Integra√ß√£o & Monitoramento
  # ================================
  integration:
    name: Integration & Monitoring
    runs-on: ubuntu-latest
    needs: [sast, sca, dast]
    steps:
      - name: Download SAST report
        uses: actions/download-artifact@v4
        with:
          name: sast-report
          path: reports/sast

      - name: Download SCA report
        uses: actions/download-artifact@v4
        with:
          name: sca-report
          path: reports/sca

      - name: Download DAST report
        uses: actions/download-artifact@v4
        with:
          name: dast-report
          path: reports/dast

      - name: Check for critical vulnerabilities
        run: |
          echo "üîé Verificando vulnerabilidades cr√≠ticas..."
          if grep -i "CRITICAL" reports/*/*; then
            echo "‚ùå Vulnerabilidades cr√≠ticas encontradas. Bloqueando deploy."
            exit 1
          fi

      - name: Send Notification (Slack)
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "üö® Vulnerabilidades cr√≠ticas encontradas no pipeline CI/CD. Deploy bloqueado."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
